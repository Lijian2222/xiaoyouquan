{"version":3,"file":"post.js","sources":["store/post.js"],"sourcesContent":["// 帖子仓库\r\nimport { defineStore } from \"pinia\"\r\nimport { ref } from \"vue\"\r\n\r\nimport { environmentStore } from \"./environment\"\r\nconst currentUrl = environmentStore().currentUrl\r\n\r\n//post是仓库的唯一标识\r\nexport const postStore = defineStore('post',()=>{\r\n\tconst list1 = ref([]) //首页帖子 推荐\r\n\tconst list2 = ref([]) //首页帖子 校友圈\r\n\tconst list3 = ref([]) //首页帖子 关注\r\n\t\r\n\tfunction handleTime(itemment) { //发布时间处理成 12-17 19：23：01的格式\r\n\t\t// 创建一个新的 Date 对象\r\n\t\tconst date=new Date(itemment.publishTime)\r\n\t\t// 获取月份（加1因为 getMonth() 返回的月份是从0开始的）\r\n\t\tconst month = (date.getMonth()+1).toString().padStart(2,0)\r\n\t\t// 获取日期\r\n\t\tconst day = date.getDate().toString().padStart(2, '0')\r\n\t\t// 获取小时\r\n\t\tconst hours = date.getHours().toString().padStart(2, '0')\r\n\t\t// 获取分钟\r\n\t\tconst minutes = date.getMinutes().toString().padStart(2, '0')\r\n\t\t// 获取秒\r\n\t\tconst seconds = date.getSeconds().toString().padStart(2, '0')\r\n\t\t// 拼接成所需的格式\r\n\t\tconst formattedTime = `${month}-${day} ${hours}:${minutes}:${seconds}`\r\n\t\t//重新赋值\r\n\t\titemment.publishTime=formattedTime\r\n\t}\r\n  \r\n\tfunction formatNumber(num) {\r\n\t\tif (num >= 0 && num < 1000) {\r\n\t\t\treturn num.toString();\r\n\t\t} else if (num >= 1000 && num < 10000) {\r\n\t\t\treturn (num / 1000).toFixed(1) + 'k';\r\n\t\t} else if (num >= 10000) {\r\n\t\t\treturn (num / 10000).toFixed(1) + 'w';\r\n\t\t} else {\r\n\t\t\treturn 'Number out of range';\r\n\t\t}\r\n\t}\r\n\t\r\n\t// 修改获取列表数据的方法，更新Map\r\n\tasync function getList1(pageIndex) {\r\n\t  let res = await uni.request({\r\n\t    url: currentUrl + '/post/query',\r\n\t    method: 'post',\r\n\t    data: {\r\n\t      \"isDeleted\": 0,\r\n\t      \"pageIndex\": pageIndex,\r\n\t      \"pageSize\": 5\r\n\t    }\r\n\t  })\r\n\t  res.data.data.forEach(item => {\r\n\t    handleTime(item)\r\n\t    // 添加到Map\r\n\t    postMap.value.set(item.id, item)\r\n\t  })\r\n\t  list1.value = [...list1.value, ...res.data.data]\r\n\t}\r\n\t\r\n\t// async function getList1(pageIndex){\r\n\t// \t// console.log(pageIndex)\r\n\t// \tlet res = await uni.request({\r\n\t// \t\t// url:'http://localhost:8080/post/query',\r\n\t// \t\turl:currentUrl+'/post/query',\r\n\t// \t\t// header: { 'content-type': 'application/x-www-form-urlencoded' },\r\n\t// \t\tmethod:'post',\r\n\t// \t\tdata:{\r\n\t// \t\t\t\"isDeleted\":0,\r\n\t// \t\t\t\"pageIndex\":pageIndex,\r\n\t// \t\t\t\"pageSize\":5\r\n\t// \t\t}\r\n\t// \t})\r\n\t// \t// console.log(res)\r\n\t// \tres.data.data.forEach( \r\n\t// \t\thandleTime\r\n\t// \t)\r\n\t// \tlist1.value = [...list1.value,...res.data.data]\r\n\t// \t// console.log(list1)\r\n\t// }\r\n\t\r\n\tasync function getList2(pageIndex){\r\n\t\tlet res = await uni.request({\r\n\t\t\t// url:'http://localhost:8080/post/query', //测试环境\r\n\t\t\turl:currentUrl+'/post/query', //生产环境\r\n\t\t\tmethod:'post',\r\n\t\t\tdata:{\r\n\t\t\t\t\"isDeleted\":0,\r\n\t\t\t\t\"campus\":'哈尔滨工业大学',//暂时写死\r\n\t\t\t\t\"pageIndex\":pageIndex,\r\n\t\t\t\t\"pageSize\":5\r\n\t\t\t}\r\n\t\t})\r\n\t\tres.data.data.forEach(\r\n\t\t\thandleTime\r\n\t\t)\r\n\t\tlist2.value = [...list2.value,...res.data.data]\r\n\t}\r\n\r\n\tasync function getList3(pageIndex){\r\n\t\tlet res = await uni.request({\r\n\t\t\t// url:'http://localhost:8080/post/query', \r\n\t\t\turl:currentUrl+'/post/query', //生产环境\r\n\t\t\tmethod:'post',\r\n\t\t\tdata:{\r\n\t\t\t\t\"isDeleted\":0,\r\n\t\t\t\t\"currentUserId\":1,//暂时写死\r\n\t\t\t\t\"pageIndex\":pageIndex,\r\n\t\t\t\t\"pageSize\":5\r\n\t\t\t}\r\n\t\t})\r\n\t\tres.data.data.forEach(\r\n\t\t\thandleTime\r\n\t\t)\r\n\t\tlist3.value = [...list3.value,...res.data.data]\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tfunction notInteresting(postId){ //不感兴趣后，推荐，校友圈，关注都将会看不见\r\n\t\tlist1.value = list1.value.filter(item=>item.id!=postId)\r\n\t\tlist2.value = list2.value.filter(item=>item.id!=postId)\r\n\t\tlist3.value = list3.value.filter(item=>item.id!=postId)\r\n\t}\r\n\t\r\n\t\r\n\t// 异步方法想要return结果，必须使用promise或者async/await\r\n\tfunction requestGood(postId){//请求该用户是否点赞过这个帖子，每个帖子都会请求一次后端\r\n\t\treturn new Promise((resolve,reject)=>{\r\n\t\t\tuni.request({\r\n\t\t\t\t// url:'http://localhost:8080/postGood/query', \r\n\t\t\t\turl:currentUrl+'/postGood/query', //生产环境\r\n\t\t\t\tmethod:'POST',\r\n\t\t\t\tdata:{\r\n\t\t\t\t\t\"postId\":postId,\r\n\t\t\t\t\t\"isDeleted\":0,//如果点赞过且isDeleted=0\r\n\t\t\t\t\t\"userId\":1 //暂时写死\r\n\t\t\t\t},\r\n\t\t\t\tsuccess:(res) => {\r\n\t\t\t\t\t// console.log(res)\r\n\t\t\t\t\tif(res.data.data==1){//如果点赞了这个帖子\r\n\t\t\t\t\t\tresolve(true)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tresolve(false)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tfail:(err) => {\r\n\t\t\t\t\treject(err)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\t\r\n\t// 添加一个Map来记录所有帖子\r\n\tconst postMap = ref(new Map())\r\n\t// 修改获取列表数据的方法，更新Map\r\n\tasync function getList1(pageIndex) {\r\n\t  let res = await uni.request({\r\n\t    url: currentUrl + '/post/query',\r\n\t    method: 'post',\r\n\t    data: {\r\n\t      \"isDeleted\": 0,\r\n\t      \"pageIndex\": pageIndex,\r\n\t      \"pageSize\": 5\r\n\t    }\r\n\t  })\r\n\t  \r\n\t  res.data.data.forEach(item => {\r\n\t    handleTime(item)\r\n\t    // 添加到Map\r\n\t    postMap.value.set(item.id, item)\r\n\t  })\r\n\t  \r\n\t  list1.value = [...list1.value, ...res.data.data]\r\n\t}\r\n\t\r\n\t// 优化点赞方法\r\n\tfunction addGoodNums(postId) {\r\n\t  // 直接从Map中获取并修改\r\n\t  if (postMap.value.has(postId)) {\r\n\t    const post = postMap.value.get(postId)\r\n\t    post.goodNums++\r\n\t    postMap.value.set(postId, post)\r\n\t  }\r\n\t}\r\n\t\r\n\t// function addGoodNums(postId){ //点赞后本地数据+1，不用重新请求后端\r\n\t// \tlist1.value.map((item,index)=>{\r\n\t// \t\tif(item.id==postId){\r\n\t// \t\t\titem.goodNums++\r\n\t// \t\t}\r\n\t// \t\treturn item\r\n\t// \t})\r\n\t// \tlist2.value.map((item,index)=>{\r\n\t// \t\tif(item.id==postId){\r\n\t// \t\t\titem.goodNums++\r\n\t// \t\t}\r\n\t// \t\treturn item\r\n\t// \t})\r\n\t// \tlist3.value.map((item,index)=>{\r\n\t// \t\tif(item.id==postId){\r\n\t// \t\t\titem.goodNums++\r\n\t// \t\t}\r\n\t// \t\treturn item\r\n\t// \t})\r\n\t// }\r\n\t\r\n\tfunction subGoodNums(postId){ //取消点赞后本地数据-1，不用重新请求后端\r\n\t\tlist1.value.map((item,index)=>{\r\n\t\t\tif(item.id==postId){\r\n\t\t\t\titem.goodNums--\r\n\t\t\t}\r\n\t\t\treturn item\r\n\t\t})\r\n\t\tlist2.value.map((item,index)=>{\r\n\t\t\tif(item.id==postId){\r\n\t\t\t\titem.goodNums--\r\n\t\t\t}\r\n\t\t\treturn item\r\n\t\t})\r\n\t\tlist3.value.map((item,index)=>{\r\n\t\t\tif(item.id==postId){\r\n\t\t\t\titem.goodNums--\r\n\t\t\t}\r\n\t\t\treturn item\r\n\t\t})\r\n\t}\t\r\n\t\r\n\t//用户点击内容，不仅发生跳转，还会增加浏览量,本地增加,不用重新请求后端\r\n\tfunction addView(postId){\r\n\t\tuni.request({\r\n\t\t\t// url:'http://localhost:8080/post/addViewNums',\r\n\t\t\turl:currentUrl+'/post/addViewNums', //生产环境\r\n\t\t\tmethod:'GET',\r\n\t\t\tdata:{\r\n\t\t\t\t\"postId\":postId,\r\n\t\t\t}\r\n\t\t})\r\n\t\tlist1.value.map((item,index)=>{\r\n\t\t\tif(item.id==postId){\r\n\t\t\t\titem.viewNums++\r\n\t\t\t}\r\n\t\t\treturn item\r\n\t\t})\r\n\t\tlist2.value.map((item,index)=>{\r\n\t\t\tif(item.id==postId){\r\n\t\t\t\titem.viewNums++\r\n\t\t\t}\r\n\t\t\treturn item\r\n\t\t})\r\n\t\tlist3.value.map((item,index)=>{\r\n\t\t\tif(item.id==postId){\r\n\t\t\t\titem.viewNums++\r\n\t\t\t}\r\n\t\t\treturn item\r\n\t\t})\r\n\t}\r\n\t\r\n\t\r\n\treturn {\r\n\t\tlist1,\r\n\t\tlist2,\r\n\t\tlist3,\r\n\t\tgetList1,\r\n\t\tgetList2,\r\n\t\tgetList3,\r\n\t\tnotInteresting,\r\n\t\tformatNumber,\r\n\t\trequestGood,\r\n\t\taddGoodNums,\r\n\t\tsubGoodNums,\r\n\t\taddView,\r\n\t\thandleTime\r\n\t}\r\n})"],"names":["environmentStore","defineStore","ref","uni"],"mappings":"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"}